apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    //set path for *.so
    sourceSets {
        //main {
        //  jniLibs.srcDirs = ['libs']
        //}
        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/dev')
        release.setRoot('build-types/release')
    }

    defaultConfig {
        applicationId "com.rockgarden.myapp"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.2"
        signingConfig signingConfigs.debug
    }

    signingConfigs {
        // your debug keystore
        debug {
            storeFile file('/Users/rockgarden/Documents/workProject/myapp.jks')
            keyAlias 'my app key'
            keyPassword 'freestar'
            storePassword 'freestar'
        }
        /*BaiduMapSDK要签名后才能用
        进入file/project structure,选择modules,有三个地方要修改:
        1.signing的选项，要新加一个 config , 加完后填入你的key file的alias、 password、档案位置等信息。
        2.flavors的选项，里面的 signing config 选择你刚新加的 config
        3.build types的选项，里面的 debug 或 release， 都将 Signing Config 选择 true
        */
    }

    // 定义不同的打包方法
    buildTypes {
        // 打包方式的命名，不要求大小写
        release {
            minifyEnabled true //代码混淆开关
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //proguard-rules.pro
        }
        dev {
            applicationIdSuffix ".dev" //通过设置此参数可生成不同的applicationId从而根据不同的需求构建不同版本的APK
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
    }

    // 这里是为了不同过的版本设置一些特殊的参数，并不直接和buildType关联。
    // 例如：使用 buildType 中的 dev 版本，也可以使用 flavors_release 里面设置的自定义参数。这需要自己按照需求制定。
    productFlavors {
        //自定义名字不过不能和上面buildType中相同，不然Gradle编译会不通过。在这里使用了『flavors_』前缀以便区分。
        flavors_release {
            // manifestPlaceholders中写到的『str』，『package_name』不支持用大写，否则Gradle编译会不通过。
            // 这里所设置的变量可以直接使用在『AndroidManifest.xml』中，使用方式为：${package_name}
            // android:label="${package_name}"
            manifestPlaceholders = [str: "releaseStr", package_name: "com.rockgarden.myapp.release"]
            // 这里的参数是为了在 java 代码中使用，具体的使用方式为：context.getResources().getString(R.string.strKey);
            resValue("string", "strKey", "releaseStrValue")
        }
        flavors_dev {
            manifestPlaceholders = [str: "devStr", package_name: "com.rockgarden.myapp.dev"]
            resValue("string", "strKey", "devStrValue")
        }
    }

    // 忽略错误检查
    lintOptions {
        checkReleaseBuilds false
        abortOnError true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

}

ext {
    supportLibVersion = '23.2.1' //variable that can be referenced to keep support libs consistent
}

dependencies {
    testCompile 'junit:junit:4.12'
    compile project(':baselib')
    compile project(':recyclerviewlib')
    compile project(':JniBitmapOperationsLibrary')
    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile "com.android.support:design:${supportLibVersion}"
    compile "com.android.support:support-v4:${supportLibVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibVersion}"
    compile "com.android.support:cardview-v7:${supportLibVersion}"
    compile "com.android.support:percent:${supportLibVersion}"
    compile "com.android.support:support-annotations:${supportLibVersion}"
    apt 'com.jakewharton:butterknife-compiler:8.0.1'
    compile files('libs/baidumapapi_base_v3_7_3.jar')
    compile files('libs/baidumapapi_map_v3_7_3.jar')
    compile files('libs/baidumapapi_util_v3_7_3.jar')
    compile files('libs/baidumapapi_search_v3_7_3.jar')
    compile files('libs/baidumapapi_cloud_v3_7_3.jar')
    compile files('libs/baidumapapi_radar_v3_7_3.jar')
    compile files('libs/locSDK_6.13.jar')
    compile files('libs/jpush-android-2.0.5.jar')
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.jakewharton:butterknife:8.0.1'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.4'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'de.hdodenhof:circleimageview:2.0.0'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'com.android.support:support-v4:23.3.0'
}
