<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.rockgarden.myapp">

    <!-- Required 自定义用来收发消息的相关权限 -->
    <permission
        android:name="com.rockgarden.myapp.permission.JPUSH_MESSAGE"
        android:protectionLevel="signature" />
    <!-- Required -->
    <uses-permission android:name="com.rockgarden.myapp.permission.JPUSH_MESSAGE" />
    <uses-permission android:name="android.permission.RECEIVE_USER_PRESENT" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.WRITE_SETTINGS" />
    <uses-permission android:name="android.permission.READ_SMS" />

    <application
        android:name=".MyApplication"
        android:allowBackup="true"
        android:hardwareAccelerated="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/Theme.Light">
        <meta-data
            android:name="com.baidu.lbsapi.API_KEY"
            android:value="TDQzm2V5fHqsBHKNl2QRAOT61fsm3yNk" />

        <!--
        activity launchMode:
        在开发一个APP前,要设计好所有Activity之间的跳转关系,是否可重建,是否需要主动finish;
        并基于此设定不同的launchMode;
        如:
        Loading,一般多为standard并需要主动finish;
        Main,一般为singleInstance避免主动释放Function;
        主要的Function(A\B\...)一般多为singleTask以避免多次onCreate;
        Function的Child,一般多为standard,确保与Function在一个Task内,在返回Function时可一次性释放;
        -->
        <activity
            android:name=".activity.LoadingActivity"
            android:configChanges="orientation|keyboardHidden|screenSize"
            android:label="@string/app_name"
            android:screenOrientation="portrait"
            android:theme="@style/FullscreenTheme">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name=".activity.LoginActivity"
            android:configChanges="orientation|keyboardHidden|screenSize"
            android:screenOrientation="portrait"/>
        <activity
            android:name=".activity.SettingActivity"
            android:configChanges="orientation|keyboardHidden"
            android:label="@string/title_activity_setting"
            android:parentActivityName=".activity.MainActivity"
            android:screenOrientation="portrait">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value="com.rockgarden.myapp.activity.MainActivity" />
        </activity>

        <!--
         singleTask:
         通过Intent启动Activity,如果系统已经存在一个实例,系统就会将请求发送到这个实例上;
         但此时系统就不会再调用onCreate方法，而是调用onNewIntent方法;
         若在后台运行的Task已经被系统Kill掉,那么系统就会new一个实例并调用onCreate方法,而不再调用onNewIntent方法;
         所以要在onCreate和onNewIntent方法中调用同一个处理数据的方法;
         singleTask的Activity首次调用时会新开一个task;
         当singleTask Activity再次进入task即将放入栈顶,则销毁其上的所有activity;
        -->
        <!--
         singleInstance:
         不会新开一个task,只是保持全栈有且只有一个activity实例对象;
        -->
        <activity
            android:name=".activity.MainActivity"
            android:launchMode="singleInstance"
            android:logo="@mipmap/ic_launcher" />
        <activity
            android:name=".activity.PhotoActivity"
            android:launchMode="singleTask"
            android:parentActivityName=".activity.MainActivity" />
        <activity android:name=".activity.CommentsActivity" />
        <activity
            android:name=".activity.ViewPagerActivity"
            android:launchMode="singleTask"
            android:parentActivityName=".activity.MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.PayToCardActivity" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>

            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".activity.LoadingActivity" />
        </activity>
        <activity
            android:name=".activity.CardActivity"
            android:launchMode="singleTask"
            android:parentActivityName=".activity.MainActivity"/>
        <activity
            android:name=".activity.PictureDetailActivity"
            android:parentActivityName=".activity.MainActivity">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".activity.MainActivity" />
        </activity>
        <!-- meta-data == android:parentActivityName都可用于指定父Activity -->
        <activity
            android:name=".deprecated.ActionBarTabsActivity"
            android:label="@string/title_activity_action_bar_tabs"
            android:launchMode="singleTask"
            android:parentActivityName=".activity.MainActivity">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".activity.MainActivity" />
        </activity>
        <activity
            android:name=".activity.SpinnerActivity"
            android:label="@string/title_activity_tab"
            android:parentActivityName=".activity.MainActivity">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".activity.MainActivity" />
        </activity>
        <activity
            android:name=".demo.BaseMapDemo"
            android:label="@string/title_activity_baidu"
            android:parentActivityName=".activity.MainActivity"
            android:screenOrientation="portrait">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".activity.MainActivity" />
        </activity>


        <!-- Required SDK核心功能 -->
        <activity
            android:name="cn.jpush.android.ui.PushActivity"
            android:configChanges="orientation|keyboardHidden"
            android:exported="false"
            android:theme="@android:style/Theme.NoTitleBar">
            <intent-filter>
                <action android:name="cn.jpush.android.ui.PushActivity" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="com.rockgarden.myapp" />
            </intent-filter>
        </activity>

        <!-- Required SDK核心功能 -->
        <service
            android:name="cn.jpush.android.service.DownloadService"
            android:enabled="true"
            android:exported="false" />

        <!-- Required SDK 核心功能 -->
        <!-- option since 2.0.5 可配置PushService，DaemonService,PushReceiver,AlarmReceiver的android:process参数 将JPush相关组件设置为一个独立进程 -->
        <!-- 如：android:process=":remote" -->
        <service
            android:name="cn.jpush.android.service.PushService"
            android:enabled="true"
            android:exported="false">
            <intent-filter>
                <action android:name="cn.jpush.android.intent.REGISTER" />
                <action android:name="cn.jpush.android.intent.REPORT" />
                <action android:name="cn.jpush.android.intent.PushService" />
                <action android:name="cn.jpush.android.intent.PUSH_TIME" />
            </intent-filter>
        </service>

        <!-- Required SDK 核心功能 since 1.8.0 -->
        <service
            android:name="cn.jpush.android.service.DaemonService"
            android:enabled="true"
            android:exported="true">
            <intent-filter>
                <action android:name="cn.jpush.android.intent.DaemonService" />

                <category android:name="com.rockgarden.myapp" />
            </intent-filter>
        </service>

        <!-- Required SDK核心功能 -->
        <receiver
            android:name="cn.jpush.android.service.PushReceiver"
            android:enabled="true"
            android:exported="false">
            <intent-filter android:priority="1000">
                <action android:name="cn.jpush.android.intent.NOTIFICATION_RECEIVED_PROXY" /> <!-- Required 显示通知栏 -->
                <category android:name="com.rockgarden.myapp" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.USER_PRESENT" />
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
            </intent-filter>
            <!-- Optional -->
            <intent-filter>
                <action android:name="android.intent.action.PACKAGE_ADDED" />
                <action android:name="android.intent.action.PACKAGE_REMOVED" />

                <data android:scheme="package" />
            </intent-filter>
        </receiver>

        <!-- Required SDK核心功能 -->
        <receiver android:name="cn.jpush.android.service.AlarmReceiver" />

        <!-- User defined. 用户自定义的广播接收器 -->
        <receiver
            android:name=".receiver.JPushReceiver"
            android:enabled="true">
            <intent-filter>
                <action android:name="cn.jpush.android.intent.REGISTRATION" /> <!-- Required 用户注册SDK的intent -->
                <action android:name="cn.jpush.android.intent.UNREGISTRATION" />
                <action android:name="cn.jpush.android.intent.MESSAGE_RECEIVED" /> <!-- Required 用户接收SDK消息的intent -->
                <action android:name="cn.jpush.android.intent.NOTIFICATION_RECEIVED" /> <!-- Required 用户接收SDK通知栏信息的intent -->
                <action android:name="cn.jpush.android.intent.NOTIFICATION_OPENED" /> <!-- Required 用户打开自定义通知栏的intent -->
                <action android:name="cn.jpush.android.intent.ACTION_RICHPUSH_CALLBACK" /> <!-- Optional 用户接受Rich Push Javascript 回调函数的intent -->
                <action android:name="cn.jpush.android.intent.CONNECTION" /> <!-- 接收网络变化 连接/断开 since 1.6.3 -->
                <category android:name="com.rockgarden.myapp" />
            </intent-filter>
        </receiver>

        <!-- Required . Enable it you can get statistics data with channel -->
        <meta-data
            android:name="JPUSH_CHANNEL"
            android:value="developer-default" />
        <meta-data
            android:name="JPUSH_APPKEY"
            android:value="b860e1b636bfc8901b9ed504" /> <!-- </>值来自开发者平台取得的AppKey -->

        <activity android:name=".demo.WebViewDemo"></activity>
        <activity android:name=".demo.JSWebViewDemo"></activity>
    </application>

</manifest>
